name: "Medicate BE CI"
on:
  push:
    branches: [ master ]
env:
  PROJECT_NAME: medicate-be
  ECS_CLUSTER: medicate-prod-ecs
  ECS_SERVICE: medicate-be-svc
  ECS_TASK_DEFINITION_ARN: arn:aws:ecs:ap-southeast-3:774305570197:task-definition/medicate-be-svc
  CONTAINER_NAME: medicate-be
permissions:
  id-token: write
  contents: read 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --force

      - name: Build backend apps
        run: npm run build

      - name: Assume role AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-3
          role-to-assume: arn:aws:iam::774305570197:role/github-actions-role
          role-session-name: medicate-github-actions

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Set docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.login_ecr.outputs.registry }}/${{ env.PROJECT_NAME }}

      - name: Build and push to Amazon ECR
        env:
          REGISTRY: ${{ steps.login_ecr.outputs.registry }}/${{ env.PROJECT_NAME }}
          TAG: ${{ github.ref_name }}-${{ github.run_id }}
        run: |
          docker build -f Dockerfile.production -t ${{ env.REGISTRY }}:${{ env.TAG }} .
          docker tag ${{ env.REGISTRY }}:${{ env.TAG }} ${{ env.REGISTRY }}:latest
          docker push ${{ env.REGISTRY }}:${{ env.TAG }}
          docker push ${{ env.REGISTRY }}:latest

      - name: Setup Amazon ECS task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: ecs-task-def
        with:
          task-definition-arn: ${{ env.ECS_TASK_DEFINITION_ARN }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login_ecr.outputs.registry }}/${{ env.PROJECT_NAME }}:${{ github.ref_name }}-${{ github.run_id }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.ecs-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
